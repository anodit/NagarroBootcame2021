You are given two integers n and k. Find the greatest integer x, such that, x^k <= n.

Input Format
First line contains number of test cases, T. Next T lines contains integers, n and k.

Constraints
1<=T<=10
1<=N<=10^15
1<=K<=10^4

Output Format
Output the integer x

Sample Input
2
10000 1
1000000000000000 10
Sample Output
10000
31
Explanation
For the first test case, for x=10000, 10000^1=10000=n

//Program

//SARVESH NATH TIWARI
#include<iostream>
#include<climits>
#include<cmath>
#define ll long long int
using namespace std;

bool possibleAnswer(ll n, ll k,ll ans){
    if(pow(ans,k)<=n){
            return true;}
        else{
            return false;
    }
}

   int main(){
       int TC;
       cin>>TC;
       while(TC--){
            ll n,k;
            cin>>n>>k;
            ll start=1,end=n;
            ll ans=1;
            while(start<=end){
                ll mid=(start+end)/2;
                if(possibleAnswer(n,k,mid)){
                    ans=mid;
                    start=mid+1;
                }
                else
                    end=mid-1;

            }
            cout<<ans<<endl;
       }
       return 0;

   }

