A Good String is a string which contains only vowels (a,e,i,o,u) . Given a string S, print a single positive integer N where N is the length of the longest substring of S that is also a Good String.

Note: The time limit for this problem is 1 second, so you need to be clever in how you compute the substrings.

Input Format
A string 'S'

Constraints
Length of string < 10^5

Output Format
A single positive integer N, where N is the length of the longest sub-string of S that is also a Good String.

Sample Input
cbaeicde
Sample Output
3
Explanation
Longest good substring is "aei"

//Program

#include <bits/stdc++.h>
using namespace std;

int main() {
	string stri;
	cin>>stri;
	int maxi=0;
	int curr = 0;
	for (int i =0;i<stri.length();i++){
		if (stri[i]=='a' || stri[i]=='e' || stri[i]=='i' || stri[i]=='o' || stri[i]=='u'){
			curr++;
		}else{
			maxi = max(curr,maxi);
			curr=0;
		}
	}
	maxi = max(maxi,curr); //  when last element is part of longest substring  
	cout<<maxi;
	cout << endl;

	return 0;
}