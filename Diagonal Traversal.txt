Given an array of M x N elements (M rows, N columns), return all elements of the array in diagonal order .

Input Format
Two integers M(row) and N(column) and Second line contains N*M space separated integers denoting the elements of Array.

Constraints
The total number of elements of the given array will not exceed 10,000.

Output Format
display Diagonal

Sample Input
3 3
1 2 3 4 5 6 7 8 9
Sample Output
1 2 4 7 5 3 6 8 9 

//Program
#include<iostream>
using namespace std;

int main() {
	int m,n;
	cin>>m>>n;
	int mat[m][n];
	for(int i=0;i<m;i++)
	{
		for(int j=0;j<n;j++)
			cin>>mat[i][j];
	}

	 // Initialize indexes of element to be printed next
    int i = 0, j = 0;
 
    // Direction is initially from down to up
    bool isUp = true;
 
    // Traverse the matrix till all elements get traversed
    for (int k = 0; k < m * n;) 
	{
        // If isUp = true then traverse from downward to upward
        if (isUp) 
		{
            for (; i >= 0 && j < n; j++, i--) 
			{
                cout << mat[i][j] << " ";
                k++;
            }
 
            // Set i and j according to direction
            if (i < 0 && j <= n - 1)
                i = 0;
            if (j == n)
                i = i + 2, j--;
        }
 
        // If isUp = 0 then traverse up to down
        else {
            for (; j >= 0 && i < m; i++, j--) {
                cout << mat[i][j] << " ";
                k++;
            }
 
            // Set i and j according to direction
            if (j < 0 && i <= m - 1)
                j = 0;
            if (i == m)
                j = j + 2, i--;
        }
 
        // Revert the isUp to change the direction
        isUp = !isUp;
    }
	return 0;
}