Given a sorted array with possibly duplicate elements, the task is to find indexes of first and last occurrences of an element x in the given array. Note:- If the x is not found in the array, print -1 -1

Input Format
The first line contains two integers n and x. The second line contains n spaced integers.

Constraints
1<n <10^8

-1< arr[i]<10^9

Output Format
Print index of the first and last occurrences of the number x with a space in between.

Sample Input
9 7
1 3 5 5 5 5 7 123 125
Sample Output
6 6

//Program

#include <bits/stdc++.h>
using namespace std;
 
/* if x is present in arr[] then returns the index of
FIRST occurrence of x in arr[0..n-1], otherwise
returns -1 */
int first(int arr[], int x, int n)
{
    int low = 0, high = n - 1, res = -1;
    while (low <= high) {
        // Normal Binary Search Logic
        int mid = (low + high) / 2;
        if (arr[mid] > x)
            high = mid - 1;
        else if (arr[mid] < x)
            low = mid + 1;
 
        // If arr[mid] is same as x, we
        // update res and move to the left
        // half.
        else {
            res = mid;
            high = mid - 1;
        }
    }
    return res;
}
 
/* if x is present in arr[] then returns the index of
LAST occurrence of x in arr[0..n-1], otherwise
returns -1 */
int last(int arr[], int x, int n)
{
    int low = 0, high = n - 1, res = -1;
    while (low <= high) {
        // Normal Binary Search Logic
        int mid = (low + high) / 2;
        if (arr[mid] > x)
            high = mid - 1;
        else if (arr[mid] < x)
            low = mid + 1;
 
        // If arr[mid] is same as x, we
        // update res and move to the right
        // half.
        else {
            res = mid;
            low = mid + 1;
        }
    }
    return res;
}
 
// Driver program
int main()
{
    int x,n;
    cin>>n>>x;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    cout<<first(arr, x, n);
    cout<<" ";
    cout<<last(arr, x, n);
 
    return 0;
}