Given a string ‘str’ of digits, find the length of the longest substring of ‘str’, such that the length of the substring is 2k digits and sum of left k digits is equal to the sum of right k digits.

Input Format
The first line of input contains an integer T denoting the number of test cases Each test case contains a string string of length N.

Constraints
Output Format
Print length of the longest substring of length 2k such that sum of left k elements is equal to right k elements and if there is no such substring print 0.

Sample Input
1
1538023
Sample Output
4

//Program

#include<bits/stdc++.h> 
using namespace std; 
  
int findLength(string str, int n) 
{ 
    int ans = 0;  
    for (int i = 0; i <= n-2; i++) 
    { 
        int l = i, r = i + 1;  
        int lsum = 0, rsum = 0; 
        while (r < n && l >= 0) 
        { 
            lsum += str[l] - '0'; 
            rsum += str[r] - '0'; 
            if (lsum == rsum) 
                ans = max(ans, r-l+1); 
            l--; 
            r++; 
        } 
    } 
    return ans; 
} 

int main() 
{ 
	int t;
	cin>>t;
	while(t--)
	{
		string str;
		cin>>str; 
    	cout << findLength(str, str.length())<<endl; 
	}
	
    return 0; 
} 