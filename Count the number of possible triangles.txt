Given an unsorted array of positive integers, find the number of triangles that can be formed with three different array elements as three sides of triangles. For a triangle to be possible from 3 values, the sum of any of the two values (or sides) must be greater than the third value (or third side).

Input Format
First line contains size of array. Second line contains space separated integers denoting the elements of the array.

Constraints
3 <= N <= 10000

Output Format
Single line integer output

Sample Input
7
8 2 5 2 2 10 9 
Sample Output
11

//Program

#include <bits/stdc++.h> 
using namespace std; 
  
void CountTriangles(vector<int> A) 
{ 
  
    int n = A.size(); 
  
    sort(A.begin(), A.end()); 
  
    int count = 0; 
  
    for (int i = n - 1; i >= 1; i--) { 
        int l = 0, r = i - 1; 
        while (l < r) { 
            if (A[l] + A[r] > A[i]) {  
                count += r - l;
                r--; 
            } 
            else
                l++; 
        } 
    } 
    cout <<count; 
} 
int main() 
{ 
	int n,val;
	cin>>n;
	vector<int> A;
	for(int i=0;i<n;i++)
	{
		cin>>val;
		A.push_back(val);
	}
    CountTriangles(A);
	return 0; 
} 
